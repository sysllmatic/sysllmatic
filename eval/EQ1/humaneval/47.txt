{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nfloat median(vector<float> l){\nsort(l.begin(),l.end());\n    if (l.size()%2==1) return l[l.size()/2];\n    return 0.5*(l[l.size()/2]+l[l.size()/2-1]);\n}",
        4.297,
        0.131,
        8839721.0,
        21132.8,
        7.615,
        11
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <algorithm>\n#include <cassert>\nusing namespace std;\n#include <stdlib.h>\n\nfloat median(vector<float> l) { \n    if (l.empty()) return 0; \n    sort(l.begin(), l.end()); \n    size_t size = l.size();\n    if (size % 2 == 1) return l[size / 2];\n    return 0.5 * (l[size / 2] + l[size / 2 - 1]);\n}\n\n",
        0.962,
        0.982,
        1.038,
        1.003,
        0.984,
        16
    ],
    "2": [
        "#include <stdio.h>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <cassert>\n#include <stdlib.h>\nusing namespace std;\n\nfloat median(vector<float> l) { \n    if (l.empty()) return 0; \n    size_t size = l.size();\n    size_t mid = size / 2;\n    std::nth_element(l.begin(), l.begin() + mid, l.end());\n    if (size % 2 == 1) {\n        return l[mid];\n    } else {\n        float mid1 = l[mid];\n        std::nth_element(l.begin(), l.begin() + mid - 1, l.begin() + mid);\n        float mid2 = l[mid - 1];\n        return 0.5 * (mid1 + mid2);\n    }\n}\n\n",
        0.918,
        1.007,
        1.037,
        1.009,
        1.008,
        23
    ]
}