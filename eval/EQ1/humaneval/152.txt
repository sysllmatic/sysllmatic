{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<int> compare(vector<int> game,vector<int> guess){\nvector<int> out;\n    for (int i=0;i<game.size();i++)\n    out.push_back(abs(game[i]-guess[i]));\n    return out;\n}",
        4.539,
        0.129,
        14568077.6,
        21004.8,
        7.76,
        12
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\nusing namespace std;\n#include <algorithm>\n#include <stdlib.h>\n\nvector<int> compare(vector<int> game, vector<int> guess){\n    vector<int> out(game.size());  \n    for (size_t i = 0; i < game.size(); ++i) {\n        int diff = game[i] - guess[i];\n        out[i] = (diff < 0) ? -diff : diff;  \n    }\n    return out;\n}",
        0.981,
        0.935,
        1.224,
        1.001,
        0.933,
        15
    ],
    "2": [
        "#include <stdio.h>\n#include <vector>\n#include <omp.h>  \n#include <immintrin.h>  \n\nusing namespace std;\n\nvector<int> compare(vector<int> game, vector<int> guess) {\n    size_t n = game.size();\n    vector<int> out(n);\n\n    #pragma omp parallel for\n    for (size_t i = 0; i < n; ++i) {\n        int diff = game[i] - guess[i];\n        \n        out[i] = (diff ^ (diff >> 31)) - (diff >> 31);\n    }\n\n    return out;\n}\n\n",
        0.96,
        0.98,
        0.104,
        0.995,
        0.978,
        21
    ]
}