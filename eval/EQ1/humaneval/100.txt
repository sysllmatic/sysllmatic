{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<int> make_a_pile(int n){\nvector<int> out={n};\n    for (int i=1;i<n;i++)\n        out.push_back(out[out.size()-1]+2);\n    return out;\n}",
        4.447,
        0.133,
        7389800.8,
        21041.6,
        7.504,
        12
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\nusing namespace std;\n\nvector<int> make_a_pile(int n) {\n    \n    vector<int> out;\n    out.reserve(n);\n    \n    \n    for (int i = 0; i < n; ++i) {\n        out.push_back(n + 2 * i);\n    }\n    return out;\n}",
        1.021,
        1.003,
        1.071,
        1.002,
        1.003,
        15
    ],
    "2": [
        "#include <stdio.h>\n#include <vector>\n#include <omp.h>\nusing namespace std;\n\nvector<int> make_a_pile(int n) {\n    vector<int> out(n);  \n    \n    \n    #pragma omp parallel for\n    for (int i = 0; i < n; ++i) {\n        out[i] = n + 2 * i;  \n    }\n    return out;\n}\n\n\n\n",
        0.979,
        1.045,
        0.048,
        0.996,
        1.046,
        18
    ]
}