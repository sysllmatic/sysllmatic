{
    "0": [
        "#include<stdio.h>\n#include<vector>\n#include<string>\nusing namespace std;\n#include<algorithm>\n#include<math.h>\n#include<stdlib.h>\nvector<int> parse_nested_parens(string paren_string){\nvector<int> all_levels;\n    string current_paren;\n    int level=0,max_level=0;\n    char chr;\n    int i;\n    for (i=0;i<paren_string.length();i++)\n    {\n        chr=paren_string[i];\n        if (chr=='(')\n        {\n        level+=1;\n        if (level>max_level) max_level=level;\n        current_paren+=chr;\n        }\n        if (chr==')')\n        {\n            level-=1;\n            current_paren+=chr;\n            if (level==0){\n                all_levels.push_back(max_level);\n                current_paren=\"\";\n                max_level=0;\n            }\n        }\n    }\n    return all_levels;\n}",
        4.75,
        0.142,
        38991211.2,
        21045.6,
        7.027,
        35
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <string>\nusing namespace std;\n#include <algorithm>\n#include <math.h>\n#include <stdlib.h>\n\nvector<int> parse_nested_parens(const string &paren_string) {\n    vector<int> all_levels;\n    int level = 0, max_level = 0;\n\n    for (char chr : paren_string) {\n        if (chr == '(') {\n            level++;\n            \n            max_level = max(max_level, level);\n        } else if (chr == ')') {\n            level--;\n            \n            if (level == 0) {\n                all_levels.push_back(max_level);\n                max_level = 0; \n            }\n        }\n    }\n    return all_levels;\n}",
        0.961,
        0.957,
        0.798,
        1.001,
        0.958,
        28
    ],
    "2": [
        "#include <stdio.h>\n#include <vector>\n#include <string>\nusing namespace std;\n\nvector<int> parse_nested_parens(const string &paren_string) {\n    vector<int> all_levels;\n    int level = 0, max_level = 0;\n\n    \n    all_levels.reserve(paren_string.size() / 2); \n\n    for (char chr : paren_string) {\n        if (chr == '(') {\n            level++;\n            if (level > max_level) {\n                max_level = level;\n            }\n        } else if (chr == ')') {\n            level--;\n            if (level == 0) {\n                all_levels.push_back(max_level);\n                max_level = 0;\n            }\n        }\n    }\n    return all_levels;\n}",
        0.972,
        1.07,
        0.847,
        1.0,
        1.071,
        28
    ]
}