{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<float> find_closest_elements(vector<float> numbers){\nvector<float> out={};\n    for (int i=0;i<numbers.size();i++)\n    for (int j=i+1;j<numbers.size();j++)\n        if (out.size()==0 or abs(numbers[i]-numbers[j])<abs(out[0]-out[1]))\n            out={numbers[i],numbers[j]};\n    if (out[0]>out[1])\n        out={out[1],out[0]};\n    return out;\n}",
        42.592,
        0.837,
        3239820888.2,
        21035.2,
        1.195,
        16
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <algorithm>\n#include <stdlib.h>\nusing namespace std;\n\nvector<float> find_closest_elements(vector<float> numbers) {\n    vector<float> out = {};\n    if (numbers.size() < 2) return out;  \n    \n    \n    sort(numbers.begin(), numbers.end());\n    \n    \n    float min_diff = fabs(numbers[1] - numbers[0]);\n    out = {numbers[0], numbers[1]};\n\n    \n    for (size_t i = 1; i < numbers.size() - 1; ++i) {\n        float diff = fabs(numbers[i + 1] - numbers[i]);\n        if (diff < min_diff) {\n            min_diff = diff;\n            out = {numbers[i], numbers[i + 1]};\n        }\n    }\n\n    return out;\n}",
        8.994,
        6.064,
        163.737,
        0.995,
        6.055,
        29
    ],
    "2": [
        "#include <vector>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nvector<float> find_closest_elements(vector<float> numbers) {\n    vector<float> out = {};\n    if (numbers.size() < 2) return out;  \n\n    \n    sort(numbers.begin(), numbers.end());\n\n    \n    float min_diff = fabs(numbers[1] - numbers[0]);\n    out = {numbers[0], numbers[1]};\n\n    \n    for (size_t i = 1; i < numbers.size() - 1; ++i) {\n        float diff = fabs(numbers[i + 1] - numbers[i]);\n        if (diff < min_diff) {\n            min_diff = diff;\n            out = {numbers[i], numbers[i + 1]};\n        }\n    }\n\n    return out;\n}",
        9.13,
        5.989,
        171.549,
        0.998,
        5.981,
        28
    ]
}