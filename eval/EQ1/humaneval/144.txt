{
    "0": [
        "#include<stdio.h>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<math.h>\n#include<stdlib.h>\nbool simplify(string x,string n){\nint a,b,c,d,i;\n    for (i=0;i<x.size();i++)\n        if (x[i]=='/') \n        {\n            a=atoi(x.substr(0,i).c_str());\n            b=atoi(x.substr(i+1).c_str());\n        }\n    for (i=0;i<n.size();i++)\n        if (n[i]=='/') \n        {\n            c=atoi(n.substr(0,i).c_str());\n            d=atoi(n.substr(i+1).c_str());\n        }\n    if ((a*c)%(b*d)==0) return true;\n    return false;\n}",
        4.42,
        0.123,
        4677783.8,
        21012.8,
        8.119,
        23
    ],
    "1": [
        "#include <iostream>\n#include <string>\n\nbool simplify(const std::string &x, const std::string &n) {\n    \n    size_t pos_x = x.find('/');\n    size_t pos_n = n.find('/');\n\n    \n    int a = std::stoi(x.substr(0, pos_x));\n    int b = std::stoi(x.substr(pos_x + 1));\n    int c = std::stoi(n.substr(0, pos_n));\n    int d = std::stoi(n.substr(pos_n + 1));\n\n    \n    int numerator_product = a * c;\n    int denominator_product = b * d;\n\n    \n    while (numerator_product >= denominator_product) {\n        numerator_product -= denominator_product;\n    }\n    return numerator_product == 0;\n}\n\n",
        0.96,
        0.951,
        0.938,
        0.997,
        0.951,
        25
    ],
    "2": [
        "#include <iostream>\n#include <string>\n\nbool simplify(const std::string &x, const std::string &n) {\n    size_t pos_x = x.find('/');\n    size_t pos_n = n.find('/');\n\n    int a = std::stoi(x.substr(0, pos_x));\n    int b = std::stoi(x.substr(pos_x + 1));\n    int c = std::stoi(n.substr(0, pos_n));\n    int d = std::stoi(n.substr(pos_n + 1));\n\n    \n    return (a * c) % (b * d) == 0;\n}\n\n",
        0.944,
        1.037,
        1.062,
        0.998,
        1.037,
        16
    ]
}