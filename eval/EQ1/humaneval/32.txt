{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\ndouble poly(vector<double> xs, double x){\n    double sum=0;\n    int i;\n    for (i=0;i<xs.size();i++)\n    {\n        sum+=xs[i]*pow(x,i);\n    }\n    return sum;\n}\n\ndouble find_zero(vector<double> xs){\ndouble ans=0;\n    double value;\n    value=poly(xs,ans);\n    while (abs(value)>1e-6)\n    {\n        double driv=0;\n        for (int i=1;i<xs.size();i++)\n        {\n            driv+=xs[i]*pow(ans,i-1)*i;\n        }\n        ans=ans-value/driv;\n        value=poly(xs,ans);\n    }\n    return ans;\n\n}",
        4.816,
        0.127,
        11101788.0,
        21137.6,
        7.882,
        33
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\n\n\ninline double poly(const vector<double> &xs, double x) {\n    double sum = 0.0;\n    double x_power = 1.0; \n    for (size_t i = 0; i < xs.size(); ++i) {\n        sum += xs[i] * x_power;\n        x_power *= x; \n    }\n    return sum;\n}\n\n\ninline double find_zero(const vector<double> &xs) {\n    double ans = 0.0;\n    double value = poly(xs, ans);\n    while (fabs(value) > 1e-6) {\n        double driv = 0.0;\n        double x_power = 1.0; \n        for (size_t i = 1; i < xs.size(); ++i) {\n            driv += xs[i] * x_power * i; \n            x_power *= ans; \n        }\n        ans -= value / driv;\n        value = poly(xs, ans);\n    }\n    return ans;\n}",
        1.037,
        0.971,
        1.447,
        0.999,
        0.969,
        33
    ],
    "2": [
        "#include <stdio.h>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\ninline double poly(const vector<double> &xs, double x) {\n    double sum = 0.0;\n    double x_power = 1.0; \n    size_t size = xs.size(); \n    for (size_t i = 0; i < size; ++i) {\n        sum += xs[i] * x_power;\n        x_power *= x; \n    }\n    return sum;\n}\n\ninline double find_zero(const vector<double> &xs) {\n    double ans = 0.0;\n    double value = poly(xs, ans);\n    size_t size = xs.size(); \n    while (fabs(value) > 1e-6) {\n        double driv = 0.0;\n        double x_power = 1.0; \n        for (size_t i = 1; i < size; ++i) {\n            driv += xs[i] * x_power * i; \n            x_power *= ans; \n        }\n\n        if (driv == 0.0) { \n            break; \n        }\n\n        ans -= value / driv;\n        value = poly(xs, ans);\n    }\n    return ans;\n}\n\n",
        1.023,
        0.98,
        1.55,
        1.002,
        0.978,
        38
    ]
}