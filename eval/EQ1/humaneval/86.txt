{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nstring anti_shuffle(string s){\nstring out=\"\";\n    string current=\"\";\n    s=s+' ';\n    for (int i=0;i<s.length();i++)\n    if (s[i]==' ')\n    {\n        sort(current.begin(),current.end());\n        if (out.length()>0) out=out+' ';\n        out=out+current;\n        current=\"\";\n    }\n    else current=current+s[i];\n    return out;\n}",
        4.611,
        0.143,
        13699335.8,
        20992.0,
        6.986,
        21
    ],
    "1": [
        "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nstring anti_shuffle(const string &s) {\n    stringstream ss(s);\n    string current;\n    stringstream out;\n    bool first = true;\n\n    while (ss >> current) {\n        sort(current.begin(), current.end());\n        if (!first) out << ' ';\n        out << current;\n        first = false;\n    }\n\n    return out.str();\n}\n\n",
        1.029,
        1.086,
        1.014,
        0.994,
        1.085,
        23
    ],
    "2": [
        "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nstring anti_shuffle(const string &s) {\n    string result;\n    result.reserve(s.size());  \n    size_t start = 0, end;\n\n    while ((end = s.find(' ', start)) != string::npos) {\n        string word = s.substr(start, end - start);\n        std::sort(word.begin(), word.end());  \n        result.append(word).append(\" \");\n        start = end + 1;\n    }\n\n    \n    string lastWord = s.substr(start);\n    std::sort(lastWord.begin(), lastWord.end());\n    result.append(lastWord);\n\n    return result;\n}\n\n",
        0.989,
        1.057,
        1.039,
        1.0,
        1.057,
        26
    ]
}