{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nvector<int> unique(vector<int> l){\nvector<int> out={};\n    for (int i=0;i<l.size();i++)\n        if (find(out.begin(),out.end(),l[i])==out.end())\n            out.push_back(l[i]);\n    sort(out.begin(),out.end());\n    return out;\n}",
        65.184,
        1.233,
        5112322435.2,
        21067.2,
        0.811,
        14
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <unordered_set>\n#include <algorithm>\nusing namespace std;\n\nvector<int> unique(vector<int> l) {\n    unordered_set<int> seen;\n    vector<int> out;\n    for (int num : l) {\n        if (seen.insert(num).second) {\n            out.push_back(num);\n        }\n    }\n    sort(out.begin(), out.end());\n    return out;\n}",
        12.168,
        7.518,
        63.844,
        0.999,
        7.511,
        17
    ],
    "2": [
        "#include <iostream>\n#include <vector>\n#include <unordered_set>\n#include <algorithm>\n\nusing namespace std;\n\nvector<int> unique(const vector<int>& l) { \n    unordered_set<int> seen;\n    vector<int> out;\n    out.reserve(l.size()); \n    for (int num : l) {\n        if (seen.insert(num).second) {\n            out.push_back(num);\n        }\n    }\n    std::sort(out.begin(), out.end()); \n    return out;\n}\n\n",
        11.707,
        8.278,
        64.435,
        0.995,
        8.269,
        20
    ]
}