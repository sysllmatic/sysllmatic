{
    "0": [
        "\n\npackage org.biojava.nbio.core.sequence.compound;\n\nimport java.io.Serializable;\n\nimport org.biojava.nbio.core.sequence.template.AbstractCompound;\nimport org.biojava.nbio.core.sequence.template.Compound;\nimport org.biojava.nbio.core.sequence.template.CompoundSet;\n\n\npublic class AminoAcidCompound extends AbstractCompound implements Serializable {\n\n\t\nprivate static final long serialVersionUID = -1955116496725902319L;\nprivate final AminoAcidCompoundSet compoundSet;\n\n\n\tpublic AminoAcidCompound(AminoAcidCompoundSet compoundSet, String shortName,\n\t\t\tString longName, String description, Float molecularWeight) {\n\t\tsuper(shortName);\n\t\tsetShortName(shortName);\n\t\tsetLongName(longName);\n\t\tsetDescription(description);\n\t\tsetMolecularWeight(molecularWeight);\n\t\tthis.compoundSet = compoundSet;\n\t}\n\n\t\n\t@Override\npublic boolean equals(Object obj) {\n\t\tif (obj == null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!(obj instanceof AminoAcidCompound)) {\n\t\t\treturn false;\n\t\t}\n\t\tAminoAcidCompound them = (AminoAcidCompound) obj;\n\t\tif (toString().equals(them.toString())) {\n\t\t\treturn true;\n\t\t}\n\t\treturn getLongName().equals(them.getLongName());\n\n\t}\n\n\t@Override\npublic int hashCode() {\n\t\treturn toString().hashCode();\n\t}\n\n\t@Override\npublic boolean equalsIgnoreCase(Compound compound) {\n\t\tif (compound == null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!(compound instanceof AminoAcidCompound)) {\n\t\t\treturn false;\n\t\t}\n\t\tAminoAcidCompound them = (AminoAcidCompound) compound;\n\t\tif (toString().equalsIgnoreCase(them.toString())) {\n\t\t\treturn true;\n\t\t}\n\t\treturn getLongName().equalsIgnoreCase(them.getLongName());\n\t}\n\n\tpublic CompoundSet<AminoAcidCompound> getCompoundSet() {\n\t\treturn compoundSet;\n\t}\n}\n"
    ],
    "1": [
        "package org.biojava.nbio.core.sequence.compound;\n\nimport java.io.Serializable;\n\nimport org.biojava.nbio.core.sequence.template.AbstractCompound;\nimport org.biojava.nbio.core.sequence.template.Compound;\nimport org.biojava.nbio.core.sequence.template.CompoundSet;\n\npublic class AminoAcidCompound extends AbstractCompound implements Serializable {\n\n    private static final long serialVersionUID = -1955116496725902319L;\n    private final AminoAcidCompoundSet compoundSet;\n\n    public AminoAcidCompound(AminoAcidCompoundSet compoundSet, String shortName,\n                             String longName, String description, Float molecularWeight) {\n        super(shortName);\n        setShortName(shortName);\n        setLongName(longName);\n        setDescription(description);\n        setMolecularWeight(molecularWeight);\n        this.compoundSet = compoundSet;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == null) {\n            return false;\n        }\n        if (!(obj instanceof AminoAcidCompound)) {\n            return false;\n        }\n        AminoAcidCompound them = (AminoAcidCompound) obj;\n        String thisStr = toString();\n        String themStr = them.toString();\n        if (thisStr.equals(themStr)) {\n            return true;\n        }\n        String thisLong = getLongName();\n        String themLong = them.getLongName();\n        return thisLong.equals(themLong);\n    }\n\n    @Override\n    public int hashCode() {\n        String thisStr = toString();\n        return thisStr.hashCode();\n    }\n\n    @Override\n    public boolean equalsIgnoreCase(Compound compound) {\n        if (compound == null) {\n            return false;\n        }\n        if (!(compound instanceof AminoAcidCompound)) {\n            return false;\n        }\n        AminoAcidCompound them = (AminoAcidCompound) compound;\n        String thisStr = toString();\n        String themStr = them.toString();\n        if (thisStr.equalsIgnoreCase(themStr)) {\n            return true;\n        }\n        String thisLong = getLongName();\n        String themLong = them.getLongName();\n        return thisLong.equalsIgnoreCase(themLong);\n    }\n\n    public CompoundSet<AminoAcidCompound> getCompoundSet() {\n        return compoundSet;\n    }\n}\n"
    ],
    "2": [
        "package org.biojava.nbio.core.sequence.compound;\n\nimport java.io.Serializable;\n\nimport org.biojava.nbio.core.sequence.template.AbstractCompound;\nimport org.biojava.nbio.core.sequence.template.Compound;\nimport org.biojava.nbio.core.sequence.template.CompoundSet;\n\npublic class AminoAcidCompound extends AbstractCompound implements Serializable {\n\n    private static final long serialVersionUID = -1955116496725902319L;\n    private final AminoAcidCompoundSet compoundSet;\n    \n    private transient String cachedToString;\n    private final int cachedHashCode;\n\n    public AminoAcidCompound(AminoAcidCompoundSet compoundSet, String shortName,\n                             String longName, String description, Float molecularWeight) {\n        super(shortName);\n        setShortName(shortName);\n        setLongName(longName);\n        setDescription(description);\n        setMolecularWeight(molecularWeight);\n        this.compoundSet = compoundSet;\n        \n        this.cachedHashCode = computeHashCode();\n    }\n\n    @Override\n    public String toString() {\n        if (cachedToString == null) {\n            cachedToString = super.toString();\n        }\n        return cachedToString;\n    }\n\n    private int computeHashCode() {\n        \n        return toString().hashCode();\n    }\n\n    @Override\n    public int hashCode() {\n        return cachedHashCode;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == null) {\n            return false;\n        }\n        if (this == obj) {\n            return true;\n        }\n        if (!(obj instanceof AminoAcidCompound)) {\n            return false;\n        }\n        AminoAcidCompound them = (AminoAcidCompound) obj;\n        \n        String thisStr = this.toString();\n        String themStr = them.toString();\n        if (thisStr.equals(themStr)) {\n            return true;\n        }\n        String thisLong = this.getLongName();\n        String themLong = them.getLongName();\n        return thisLong.equals(themLong);\n    }\n\n    @Override\n    public boolean equalsIgnoreCase(Compound compound) {\n        if (compound == null) {\n            return false;\n        }\n        if (this == compound) {\n            return true;\n        }\n        if (!(compound instanceof AminoAcidCompound)) {\n            return false;\n        }\n        AminoAcidCompound them = (AminoAcidCompound) compound;\n        String thisStr = this.toString();\n        String themStr = them.toString();\n        if (thisStr.equalsIgnoreCase(themStr)) {\n            return true;\n        }\n        String thisLong = this.getLongName();\n        String themLong = them.getLongName();\n        return thisLong.equalsIgnoreCase(themLong);\n    }\n\n    public CompoundSet<AminoAcidCompound> getCompoundSet() {\n        return compoundSet;\n    }\n}\n"
    ]
}