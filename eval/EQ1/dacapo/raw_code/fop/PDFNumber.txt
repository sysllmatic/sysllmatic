{
    "0": [
        "\n\n\n\npackage org.apache.fop.pdf;\n\nimport org.apache.xmlgraphics.util.DoubleFormatUtil;\n\n\npublic class PDFNumber extends PDFObject {\n\n    private Number number;\n\n    public PDFNumber() {\n        this.number = 0;\n    }\n\n    public PDFNumber(Number number) {\n        this.number = number;\n    }\n\n    \n    public Number getNumber() {\n        return this.number;\n    }\n\n    \n    public void setNumber(Number number) {\n        this.number = number;\n    }\n\n    \n    public static String doubleOut(Double doubleDown) {\n        return doubleOut(doubleDown.doubleValue());\n    }\n\n    \n    public static String doubleOut(double doubleDown) {\n        return doubleOut(doubleDown, 6);\n    }\n\n    \n    public static String doubleOut(double doubleDown, int dec) {\n        if (dec < 0 || dec > 16) {\n            throw new IllegalArgumentException(\"Parameter dec must be between 1 and 16\");\n        }\n        StringBuffer buf = new StringBuffer();\n        DoubleFormatUtil.formatDouble(doubleDown, dec, dec, buf);\n        return buf.toString();\n    }\n\n    \n    public static StringBuffer doubleOut(double doubleDown, int dec, StringBuffer buf) {\n        if (dec < 0 || dec > 16) {\n            throw new IllegalArgumentException(\"Parameter dec must be between 1 and 16\");\n        }\n        DoubleFormatUtil.formatDouble(doubleDown, dec, dec, buf);\n        return buf;\n    }\n\n    \n    protected String toPDFString() {\n        if (getNumber() == null) {\n            throw new IllegalArgumentException(\n                \"The number of this PDFNumber must not be empty\");\n        }\n        StringBuffer sb = new StringBuffer(64);\n        sb.append(doubleOut(getNumber().doubleValue(), 10));\n        return sb.toString();\n    }\n\n}\n\n"
    ],
    "1": [
        "package org.apache.fop.pdf;\n\nimport org.apache.xmlgraphics.util.DoubleFormatUtil;\n\npublic class PDFNumber extends PDFObject {\n\n    private Number number;\n\n    public PDFNumber() {\n        this.number = 0;\n    }\n\n    public PDFNumber(Number number) {\n        this.number = number;\n    }\n\n    public Number getNumber() {\n        return this.number;\n    }\n\n    public void setNumber(Number number) {\n        this.number = number;\n    }\n\n    public static String doubleOut(Double doubleDown) {\n        return doubleOut(doubleDown.doubleValue());\n    }\n\n    public static String doubleOut(double doubleDown) {\n        return doubleOut(doubleDown, 6);\n    }\n\n    public static String doubleOut(double doubleDown, int dec) {\n        if (dec < 0 || dec > 16) {\n            throw new IllegalArgumentException(\"Parameter dec must be between 1 and 16\");\n        }\n        \n        StringBuffer buf = new StringBuffer(24); \n        DoubleFormatUtil.formatDouble(doubleDown, dec, dec, buf);\n        return buf.toString();\n    }\n\n    public static StringBuffer doubleOut(double doubleDown, int dec, StringBuffer buf) {\n        if (dec < 0 || dec > 16) {\n            throw new IllegalArgumentException(\"Parameter dec must be between 1 and 16\");\n        }\n        DoubleFormatUtil.formatDouble(doubleDown, dec, dec, buf);\n        return buf;\n    }\n\n    @Override\n    protected String toPDFString() {\n        Number n = getNumber();\n        if (n == null) {\n            throw new IllegalArgumentException(\n                \"The number of this PDFNumber must not be empty\");\n        }\n        \n        return doubleOut(n.doubleValue(), 10);\n    }\n}\n"
    ],
    "2": [
        "package org.apache.fop.pdf;\n\nimport org.apache.xmlgraphics.util.DoubleFormatUtil;\n\npublic class PDFNumber extends PDFObject {\n\n    private Number number;\n    \n    private String cachedPDFString = null;\n\n    public PDFNumber() {\n        this.number = 0;\n    }\n\n    public PDFNumber(Number number) {\n        this.number = number;\n    }\n\n    public Number getNumber() {\n        return this.number;\n    }\n\n    public void setNumber(Number number) {\n        this.number = number;\n        this.cachedPDFString = null; \n    }\n\n    \n    public static String doubleOut(Double doubleDown) {\n        return doubleOut(doubleDown.doubleValue());\n    }\n\n    \n    public static String doubleOut(double doubleDown) {\n        return doubleOut(doubleDown, 6);\n    }\n\n    \n    public static String doubleOut(double doubleDown, int dec) {\n        if (dec < 0 || dec > 16) {\n            throw new IllegalArgumentException(\"Parameter dec must be between 1 and 16\");\n        }\n        StringBuffer buf = new StringBuffer(24); \n        DoubleFormatUtil.formatDouble(doubleDown, dec, dec, buf);\n        return buf.toString();\n    }\n\n    \n    public static StringBuffer doubleOut(double doubleDown, int dec, StringBuffer buf) {\n        if (dec < 0 || dec > 16) {\n            throw new IllegalArgumentException(\"Parameter dec must be between 1 and 16\");\n        }\n        DoubleFormatUtil.formatDouble(doubleDown, dec, dec, buf);\n        return buf;\n    }\n\n    @Override\n    protected String toPDFString() {\n        if (cachedPDFString != null) {\n            return cachedPDFString;\n        }\n        Number n = getNumber();\n        if (n == null) {\n            throw new IllegalArgumentException(\n                \"The number of this PDFNumber must not be empty\");\n        }\n        cachedPDFString = doubleOut(n.doubleValue(), 10);\n        return cachedPDFString;\n    }\n}\n"
    ]
}