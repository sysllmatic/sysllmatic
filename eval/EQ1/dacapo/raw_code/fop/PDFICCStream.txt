{
    "0": [
        "\n\n\n\npackage org.apache.fop.pdf;\n\nimport java.awt.color.ICC_Profile;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\n\npublic class PDFICCStream extends PDFStream {\n\n    private ICC_Profile cp;\n    private PDFDeviceColorSpace pdfColorSpace;\n\n    \n    public PDFICCStream() {\n        super();\n        cp = null;\n    }\n\n    \n    public void setColorSpace(ICC_Profile icc, PDFDeviceColorSpace alt) {\n        this.cp = icc;\n        pdfColorSpace = alt;\n    }\n\n    \n    public ICC_Profile getICCProfile() {\n        return this.cp;\n    }\n\n    \n    @Override\n    public int output(java.io.OutputStream stream)\n                throws java.io.IOException {\n        int length = super.output(stream);\n        this.cp = null; \n        return length;\n    }\n\n    \n    @Override\n    protected void outputRawStreamData(OutputStream out) throws IOException {\n        cp.write(out);\n    }\n\n    \n    @Override\n    protected void populateStreamDict(Object lengthEntry) {\n        put(\"N\", cp.getNumComponents());\n        if (pdfColorSpace != null) {\n            put(\"Alternate\", new PDFName(pdfColorSpace.getName()));\n        }\n        super.populateStreamDict(lengthEntry);\n    }\n\n}\n"
    ],
    "1": [
        "package org.apache.fop.pdf;\n\nimport java.awt.color.ICC_Profile;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\npublic class PDFICCStream extends PDFStream {\n\n    private ICC_Profile cp;\n    private PDFDeviceColorSpace pdfColorSpace;\n    private PDFName cachedAlternatePDFName; \n\n    public PDFICCStream() {\n        super();\n        cp = null;\n        pdfColorSpace = null;\n        cachedAlternatePDFName = null;\n    }\n\n    public void setColorSpace(ICC_Profile icc, PDFDeviceColorSpace alt) {\n        this.cp = icc;\n        this.pdfColorSpace = alt;\n        if (alt != null) {\n            \n            this.cachedAlternatePDFName = new PDFName(alt.getName());\n        } else {\n            this.cachedAlternatePDFName = null;\n        }\n    }\n\n    public ICC_Profile getICCProfile() {\n        return this.cp;\n    }\n\n    @Override\n    public int output(java.io.OutputStream stream)\n                throws java.io.IOException {\n        int length = super.output(stream);\n        this.cp = null; \n        return length;\n    }\n\n    @Override\n    protected void outputRawStreamData(OutputStream out) throws IOException {\n        cp.write(out);\n    }\n\n    @Override\n    protected void populateStreamDict(Object lengthEntry) {\n        put(\"N\", cp.getNumComponents());\n        if (cachedAlternatePDFName != null) {\n            put(\"Alternate\", cachedAlternatePDFName);\n        }\n        super.populateStreamDict(lengthEntry);\n    }\n}\n"
    ],
    "2": [
        "package org.apache.fop.pdf;\n\nimport java.awt.color.ICC_Profile;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\npublic class PDFICCStream extends PDFStream {\n\n    private ICC_Profile cp;\n    private PDFDeviceColorSpace pdfColorSpace;\n    private PDFName cachedAlternatePDFName; \n    private byte[] iccProfileBytes; \n\n    public PDFICCStream() {\n        super();\n        cp = null;\n        pdfColorSpace = null;\n        cachedAlternatePDFName = null;\n        iccProfileBytes = null;\n    }\n\n    public void setColorSpace(ICC_Profile icc, PDFDeviceColorSpace alt) {\n        this.cp = icc;\n        this.pdfColorSpace = alt;\n        if (alt != null) {\n            this.cachedAlternatePDFName = new PDFName(alt.getName());\n        } else {\n            this.cachedAlternatePDFName = null;\n        }\n        this.iccProfileBytes = null; \n    }\n\n    public ICC_Profile getICCProfile() {\n        return this.cp;\n    }\n\n    @Override\n    public int output(java.io.OutputStream stream)\n                throws java.io.IOException {\n        int length = super.output(stream);\n        \n        \n        return length;\n    }\n\n    @Override\n    protected void outputRawStreamData(OutputStream out) throws IOException {\n        if (iccProfileBytes != null) {\n            out.write(iccProfileBytes);\n        } else if (cp != null) {\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            cp.write(baos);\n            iccProfileBytes = baos.toByteArray();\n            out.write(iccProfileBytes);\n        }\n        \n    }\n\n    @Override\n    protected void populateStreamDict(Object lengthEntry) {\n        if (cp != null) {\n            put(\"N\", cp.getNumComponents());\n        }\n        if (cachedAlternatePDFName != null) {\n            put(\"Alternate\", cachedAlternatePDFName);\n        }\n        super.populateStreamDict(lengthEntry);\n    }\n}\n"
    ]
}