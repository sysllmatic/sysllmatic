{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nvector<int> largest_smallest_integers(vector<int> lst){\nint maxneg=0,minpos=0;\n    for (int i=0;i<lst.size();i++)\n    {\n        if (lst[i]<0 and (maxneg==0 or lst[i]>maxneg)) maxneg=lst[i];\n        if (lst[i]>0 and (minpos==0 or lst[i]<minpos)) minpos=lst[i];\n    }\n    return {maxneg,minpos};\n}",
        4.717,
        0.132,
        12191662.8,
        20981.6,
        7.593,
        15
    ],
    "1": [
        "#include <vector>\n#include <limits>\n\nusing namespace std;\n\nvector<int> largest_smallest_integers(const vector<int>& lst) {\n    int maxneg = numeric_limits<int>::min();\n    int minpos = numeric_limits<int>::max();\n    \n    for (int num : lst) {\n        if (num < 0) {\n            maxneg = max(maxneg, num);\n        }\n        if (num > 0) {\n            minpos = min(minpos, num);\n        }\n    }\n    \n    \n    if (maxneg == numeric_limits<int>::min()) maxneg = 0;\n    if (minpos == numeric_limits<int>::max()) minpos = 0;\n    \n    return {maxneg, minpos};\n}",
        1.034,
        0.95,
        0.964,
        0.995,
        0.946,
        24
    ],
    "2": [
        "#include <vector>\n#include <limits>\n\nusing namespace std;\n\nvector<int> largest_smallest_integers(const vector<int>& lst) {\n    int maxneg = numeric_limits<int>::min();\n    int minpos = numeric_limits<int>::max();\n    \n    for (int num : lst) {\n        if (num < 0) {\n            maxneg = max(maxneg, num);\n        }\n        if (num > 0) {\n            minpos = min(minpos, num);\n        }\n    }\n    \n    \n    if (maxneg == numeric_limits<int>::min()) maxneg = 0;\n    if (minpos == numeric_limits<int>::max()) minpos = 0;\n    \n    return {maxneg, minpos};\n}\n\n\n",
        0.982,
        0.997,
        0.971,
        1.001,
        0.993,
        26
    ]
}