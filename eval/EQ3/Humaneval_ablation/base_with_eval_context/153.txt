{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nstring Strongest_Extension(string class_name,vector<string> extensions){\nstring strongest=\"\";\n    int max=-1000;\n    for (int i=0;i<extensions.size();i++)\n    {\n        int strength=0;\n        for (int j=0;j<extensions[i].length();j++)\n        {\n            char chr=extensions[i][j];\n            if (chr>=65 and chr<=90) strength+=1;\n            if (chr>=97 and chr<=122) strength-=1;\n        }\n        if (strength>max) \n        {\n            max=strength;\n            strongest=extensions[i];\n        }\n    }\n    return class_name+'.'+strongest;\n}",
        4.561,
        0.135,
        19437915.0,
        20981.6,
        7.378,
        27
    ],
    "1": [
        "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <climits> \nusing namespace std;\n\nstring Strongest_Extension(const string& class_name, const vector<string>& extensions) {\n    string strongest = \"\";\n    int max_strength = INT_MIN;\n\n    for (const auto& extension : extensions) {\n        int strength = 0;\n        for (char chr : extension) {\n            if (chr >= 'A' && chr <= 'Z') {\n                strength += 1;\n            } else if (chr >= 'a' && chr <= 'z') {\n                strength -= 1;\n            }\n        }\n        if (strength > max_strength) {\n            max_strength = strength;\n            strongest = extension;\n        }\n    }\n\n    return class_name + '.' + strongest;\n}\n\n",
        0.948,
        1.067,
        0.96,
        0.997,
        1.069,
        29
    ],
    "2": [
        "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <climits> \nusing namespace std;\n\nstring Strongest_Extension(const string& class_name, const vector<string>& extensions) {\n    string strongest = \"\";\n    int max_strength = INT_MIN;\n\n    for (const auto& extension : extensions) {\n        int strength = 0;\n        for (char chr : extension) {\n            if (chr >= 'A' && chr <= 'Z') {\n                strength += 1;\n            } else if (chr >= 'a' && chr <= 'z') {\n                strength -= 1;\n            }\n        }\n        if (strength > max_strength) {\n            max_strength = strength;\n            strongest = extension;\n        }\n    }\n\n    return class_name + '.' + strongest;\n}\n\n",
        0.934,
        0.93,
        0.99,
        0.996,
        0.933,
        29
    ]
}