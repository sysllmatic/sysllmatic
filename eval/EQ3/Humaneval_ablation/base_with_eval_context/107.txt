{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<string>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<int> even_odd_palindrome(int n){\nint num1=0,num2=0;\n    for (int i=1;i<=n;i++)\n    {\n        string w=to_string(i);\n        string p(w.rbegin(),w.rend());\n        if (w==p and i%2==1) num1+=1;\n        if (w==p and i%2==0) num2+=1;\n            \n    }\n    return {num2,num1};\n}",
        4.702,
        0.13,
        7997674.2,
        21043.2,
        7.687,
        19
    ],
    "1": [
        "#include <vector>\n#include <utility>\n#include <algorithm>\n\nusing namespace std;\n\nvector<int> even_odd_palindrome(int n) {\n    int num1 = 0, num2 = 0;\n    for (int i = 1; i <= n; ++i) {\n        \n        int original = i;\n        int reversed = 0;\n        while (original > 0) {\n            reversed = reversed * 10 + original % 10;\n            original /= 10;\n        }\n        \n        if (reversed == i) {\n            if (i % 2 == 0) {\n                ++num2; \n            } else {\n                ++num1; \n            }\n        }\n    }\n    return {num2, num1};\n}",
        0.999,
        1.011,
        1.735,
        0.997,
        1.011,
        27
    ],
    "2": [
        "#include <vector>\n#include <omp.h>\n\nusing namespace std;\n\nvector<int> even_odd_palindrome(int n) {\n    int num1 = 0, num2 = 0;\n    #pragma omp parallel for reduction(+:num1, num2)\n    for (int i = 1; i <= n; ++i) {\n        int original = i;\n        int reversed = 0;\n        while (original > 0) {\n            reversed = reversed * 10 + original % 10;\n            original /= 10;\n        }\n        if (reversed == i) {\n            if (i % 2 == 0) {\n                ++num2;\n            } else {\n                ++num1;\n            }\n        }\n    }\n    return {num2, num1};\n}",
        0.89,
        1.006,
        0.02,
        1.002,
        1.006,
        25
    ]
}