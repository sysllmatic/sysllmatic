{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<int> make_a_pile(int n){\nvector<int> out={n};\n    for (int i=1;i<n;i++)\n        out.push_back(out[out.size()-1]+2);\n    return out;\n}",
        5.004,
        0.136,
        7799255.2,
        21092.8,
        7.335,
        12
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\nusing namespace std;\n\nvector<int> make_a_pile(int n) {\n    vector<int> out;\n    out.reserve(n); \n    for (int i = 0; i < n; ++i) {\n        out.push_back(n + 2 * i); \n    }\n    return out;\n}",
        0.37,
        1.075,
        1.043,
        0.997,
        1.077,
        12
    ],
    "2": [
        "#include <stdio.h>\n#include <vector>\n#include <omp.h> \nusing namespace std;\n\nvector<int> make_a_pile(int n) {\n    vector<int> out(n); \n\n    #pragma omp parallel for\n    for (int i = 0; i < n; ++i) {\n        out[i] = n + 2 * i; \n    }\n    return out;\n}",
        0.466,
        0.917,
        0.002,
        1.0,
        0.919,
        14
    ]
}