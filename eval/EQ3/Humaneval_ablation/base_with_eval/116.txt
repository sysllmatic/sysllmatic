{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nvector<int> sort_array(vector<int> arr){\nvector<int> bin={};\n    int m;\n\n    for (int i=0;i<arr.size();i++)\n    {\n        int b=0,n=abs(arr[i]);\n        while (n>0)\n        {\n            b+=n%2;n=n/2;\n        }\n        bin.push_back(b);\n    }\n    for (int i=0;i<arr.size();i++)\n    for (int j=1;j<arr.size();j++)\n    if (bin[j]<bin[j-1] or (bin[j]==bin[j-1] and arr[j]<arr[j-1]))\n    {\n        m=arr[j];arr[j]=arr[j-1];arr[j-1]=m;\n        m=bin[j];bin[j]=bin[j-1];bin[j-1]=m;\n    }\n    return arr;\n}",
        304.776,
        5.591,
        25538988828.6,
        21106.4,
        0.179,
        28
    ],
    "1": [
        "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdlib> \n\nusing namespace std;\n\nvector<int> sort_array(vector<int> arr) {\n    \n    sort(arr.begin(), arr.end(), [](int a, int b) {\n        int countA = __builtin_popcount(abs(a));\n        int countB = __builtin_popcount(abs(b));\n        \n        return countA < countB || (countA == countB && a < b);\n    });\n    return arr;\n}\n\n",
        61.333,
        39.239,
        524.417,
        1.0,
        39.171,
        18
    ],
    "2": [
        "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <unordered_map>\n#include <cstdlib> \n\nusing namespace std;\n\n\nint countSetBits(int num) {\n    int count = 0;\n    while (num) {\n        count += num & 1;\n        num >>= 1;\n    }\n    return count;\n}\n\nvector<int> sort_array(vector<int> arr) {\n    unordered_map<int, int> bitCountCache; \n\n    sort(arr.begin(), arr.end(), [&](int a, int b) {\n        int absA = abs(a);\n        int absB = abs(b);\n        if (bitCountCache.find(absA) == bitCountCache.end()) {\n            bitCountCache[absA] = countSetBits(absA);\n        }\n        if (bitCountCache.find(absB) == bitCountCache.end()) {\n            bitCountCache[absB] = countSetBits(absB);\n        }\n        int countA = bitCountCache[absA];\n        int countB = bitCountCache[absB];\n\n        return countA < countB || (countA == countB && a < b);\n    });\n    return arr;\n}\n\n",
        25.176,
        19.78,
        41.145,
        1.005,
        19.754,
        38
    ]
}