{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nint search(vector<int> lst){\nvector<vector<int>> freq={};\n    int max=-1;\n    for (int i=0;i<lst.size();i++)\n    {\n        bool has=false;\n        for (int j=0;j<freq.size();j++)\n            if (lst[i]==freq[j][0]) \n            {\n            freq[j][1]+=1;\n            has=true;\n            if (freq[j][1]>=freq[j][0] and freq[j][0]>max) max=freq[j][0];\n            }\n        if (not(has)) \n        {\n        freq.push_back({lst[i],1});\n        if (max==-1 and lst[i]==1) max=1;\n        }\n    }\n    return max;\n}",
        45.985,
        0.892,
        3464985841.6,
        20982.4,
        1.121,
        27
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nint search(const vector<int>& lst) {\n    unordered_map<int, int> freq;\n    int max_num = -1;\n    \n    for (int num : lst) {\n        freq[num]++;\n        if (freq[num] >= num && num > max_num) {\n            max_num = num;\n        }\n    }\n    \n    return max_num;\n}",
        9.077,
        6.493,
        80.945,
        0.999,
        6.485,
        18
    ],
    "2": [
        "#include <stdio.h>\n#include <vector>\n#include <unordered_map>\nusing namespace std;\n\nint search(const vector<int>& lst) {\n    if (lst.empty()) return -1;  \n\n    unordered_map<int, int> freq;\n    freq.reserve(lst.size());  \n    int max_num = -1;\n    \n    for (int num : lst) {\n        freq[num]++;\n        if (freq[num] >= num && num > max_num) {\n            max_num = num;\n        }\n    }\n    \n    return max_num;\n}",
        9.191,
        5.88,
        85.151,
        0.994,
        5.873,
        21
    ]
}