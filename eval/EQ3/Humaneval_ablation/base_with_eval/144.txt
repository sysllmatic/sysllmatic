{
    "0": [
        "#include<stdio.h>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<math.h>\n#include<stdlib.h>\nbool simplify(string x,string n){\nint a,b,c,d,i;\n    for (i=0;i<x.size();i++)\n        if (x[i]=='/') \n        {\n            a=atoi(x.substr(0,i).c_str());\n            b=atoi(x.substr(i+1).c_str());\n        }\n    for (i=0;i<n.size();i++)\n        if (n[i]=='/') \n        {\n            c=atoi(n.substr(0,i).c_str());\n            d=atoi(n.substr(i+1).c_str());\n        }\n    if ((a*c)%(b*d)==0) return true;\n    return false;\n}",
        4.524,
        0.129,
        4690333.6,
        20988.0,
        7.72,
        23
    ],
    "1": [
        "#include <iostream>\n#include <sstream>\nusing namespace std;\n\nbool simplify(const string& x, const string& n) {\n    int a = 0, b = 0, c = 0, d = 0;\n\n    size_t x_pos = x.find('/');\n    if (x_pos != string::npos) {\n        istringstream(x.substr(0, x_pos)) >> a;\n        istringstream(x.substr(x_pos + 1)) >> b;\n    }\n\n    size_t n_pos = n.find('/');\n    if (n_pos != string::npos) {\n        istringstream(n.substr(0, n_pos)) >> c;\n        istringstream(n.substr(n_pos + 1)) >> d;\n    }\n\n    \n    return (a * c) % (b * d) == 0;\n}\n\n",
        1.007,
        0.992,
        0.979,
        1.004,
        0.995,
        23
    ],
    "2": [
        "#include <iostream>\n#include <string>\n#include <stdexcept>\nusing namespace std;\n\nbool simplify(const string& x, const string& n) {\n    try {\n        size_t x_pos = x.find('/');\n        size_t n_pos = n.find('/');\n\n        if (x_pos == string::npos || n_pos == string::npos) {\n            return false; \n        }\n\n        int a = stoi(x.substr(0, x_pos));\n        int b = stoi(x.substr(x_pos + 1));\n        int c = stoi(n.substr(0, n_pos));\n        int d = stoi(n.substr(n_pos + 1));\n\n        \n        return (static_cast<long long>(a) * c) % (static_cast<long long>(b) * d) == 0;\n    } catch (const invalid_argument& e) {\n        \n        return false;\n    } catch (const out_of_range& e) {\n        \n        return false;\n    }\n}\n\n",
        0.955,
        0.992,
        0.934,
        0.991,
        0.995,
        30
    ]
}