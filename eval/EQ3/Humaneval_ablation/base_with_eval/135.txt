{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nint can_arrange(vector<int> arr){\nint max=-1;\n    for (int i=0;i<arr.size();i++)\n    if (arr[i]<=i) max=i;\n    return max;\n}",
        4.95,
        0.136,
        7440280.8,
        21089.6,
        7.324,
        12
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint can_arrange(const vector<int>& arr) {\n    int max_index = -1;\n    for (int i = 0; i < arr.size(); ++i) {\n        if (arr[i] <= i) {\n            max_index = std::max(max_index, i);\n        }\n    }\n    return max_index;\n}\n\n\n",
        1.103,
        0.994,
        0.947,
        1.001,
        0.997,
        17
    ],
    "2": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint can_arrange(const vector<int>& arr) {\n    int max_index = -1;\n    for (int i = 0; i < arr.size(); ++i) {\n        if (arr[i] <= i && i > max_index) {\n            max_index = i;\n        }\n    }\n    return max_index;\n}\n\n",
        0.686,
        0.953,
        0.909,
        1.0,
        0.955,
        16
    ]
}