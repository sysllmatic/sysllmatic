{
    "0": [
        "#include<stdio.h>\n#include<vector>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<math.h>\n#include<stdlib.h>\nstring find_max(vector<string> words){\nstring max=\"\";\n    int maxu=0;\n    for (int i=0;i<words.size();i++)\n    {\n        string unique=\"\";\n        for (int j=0;j<words[i].length();j++)\n            if (find(unique.begin(),unique.end(),words[i][j])==unique.end())\n                unique=unique+words[i][j];\n        if (unique.length()>maxu or (unique.length()==maxu and words[i]<max))\n        {\n            max=words[i];\n            maxu=unique.length();\n        }\n    }\n    return max;\n}",
        4.784,
        0.142,
        26556612.6,
        20983.2,
        7.021,
        24
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <string>\n#include <unordered_set>\nusing namespace std;\n\nstring find_max(vector<string> words) {\n    string max = \"\";\n    int maxu = 0;\n    for (const auto& word : words) {\n        unordered_set<char> unique_chars;\n        for (const char& ch : word) {\n            unique_chars.insert(ch);\n        }\n        int unique_count = unique_chars.size();\n        if (unique_count > maxu || (unique_count == maxu && word < max)) {\n            max = word;\n            maxu = unique_count;\n        }\n    }\n    return max;\n}\n\n",
        0.977,
        0.977,
        0.839,
        0.996,
        0.979,
        23
    ],
    "2": [
        "#include <stdio.h>\n#include <vector>\n#include <string>\n#include <bitset>\nusing namespace std;\n\nstring find_max(vector<string> words) {\n    string max = \"\";\n    int maxu = 0;\n    for (const auto& word : words) {\n        bitset<128> unique_chars;  \n        for (const char& ch : word) {\n            unique_chars.set(static_cast<unsigned char>(ch));\n        }\n        int unique_count = unique_chars.count();\n        if (unique_count > maxu || (unique_count == maxu && word < max)) {\n            max = word;\n            maxu = unique_count;\n        }\n    }\n    return max;\n}\n\n",
        1.042,
        1.037,
        2.285,
        0.999,
        1.038,
        23
    ]
}