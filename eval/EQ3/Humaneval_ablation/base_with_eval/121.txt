{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nint solutions(vector<int> lst){\nint sum=0;\n    for (int i=0;i*2<lst.size();i++)\n        if (lst[i*2]%2==1) sum+=lst[i*2];\n    return sum;\n}",
        8.217,
        0.185,
        265285573.4,
        33830.4,
        5.408,
        12
    ],
    "1": [
        "#include <iostream>\n#include <vector>\n\nint solutions(const std::vector<int>& lst) {\n    int sum = 0;\n    for (size_t i = 0; i < lst.size(); i += 2) {\n        if (lst[i] % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\n",
        1.052,
        0.954,
        1.167,
        1.6,
        0.953,
        13
    ],
    "2": [
        "#include <iostream>\n#include <vector>\n#include <omp.h> \n\n\nint solutions(const std::vector<int>& lst) {\n    int sum = 0;\n    \n    #pragma omp parallel for reduction(+:sum)\n    for (size_t i = 0; i < lst.size(); i += 2) {\n        if (lst[i] % 2 == 1) { \n            sum += lst[i]; \n        }\n    }\n    return sum; \n}\n\n",
        1.087,
        1.012,
        0.771,
        1.611,
        1.01,
        17
    ]
}