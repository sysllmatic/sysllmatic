{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<string>\n#include<algorithm>\n#include<boost/any.hpp>\nusing namespace std;\n#include<stdlib.h>\nboost::any compare_one(boost::any a,boost::any b){\ndouble  numa,numb;\n    boost::any out;\n   \n    if (a.type()==typeid(string))\n    {\n        string s;\n        s=boost::any_cast<string>(a);\n        if (find(s.begin(),s.end(),',')!=s.end())\n            for (int i=0;i<s.length();i++)\n                if (s[i]==',') s=s.substr(0,i)+'.'+s.substr(i+1);\n        numa=atof(s.c_str());\n        \n    }\n    else \n    {\n        if (a.type()==typeid(int)) numa=boost::any_cast<int>(a);\n        if (a.type()==typeid(double)) numa=boost::any_cast<double>(a);\n    }\n    if (b.type()==typeid(string))\n    {\n        string s;\n        s=boost::any_cast<string>(b);\n        if (find(s.begin(),s.end(),',')!=s.end())\n            for (int i=0;i<s.length();i++)\n                if (s[i]==',') s=s.substr(0,i)+'.'+s.substr(i+1);\n        numb=atof(s.c_str());\n    }\n    else \n    {\n        if (b.type()==typeid(int)) numb=boost::any_cast<int>(b);\n        if (b.type()==typeid(double)) numb=boost::any_cast<double>(b);\n    }\n\n    if (numa==numb) return string(\"None\");\n    if (numa<numb) return b;\n    if (numa>numb) return a;\n}",
        4.794,
        0.133,
        4678262.0,
        21064.0,
        7.493,
        45
    ],
    "1": [
        "#include <stdio.h>\n#include <string>\n#include <algorithm>\n#include <boost/any.hpp>\n#include <sstream>\nusing namespace std;\n\n\nstatic double any_to_double(const boost::any& value) {\n    if (value.type() == typeid(string)) {\n        string s = boost::any_cast<string>(value);\n        replace(s.begin(), s.end(), ',', '.'); \n        return atof(s.c_str());\n    } else if (value.type() == typeid(int)) {\n        return static_cast<double>(boost::any_cast<int>(value));\n    } else if (value.type() == typeid(double)) {\n        return boost::any_cast<double>(value);\n    }\n    throw std::invalid_argument(\"Unsupported type\");\n}\n\nboost::any compare_one(boost::any a, boost::any b) {\n    double numa = any_to_double(a);\n    double numb = any_to_double(b);\n\n    if (numa == numb) return string(\"None\");\n    return numa < numb ? b : a;\n}\n\n",
        1.024,
        0.979,
        1.017,
        0.998,
        0.982,
        29
    ]
}